# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "test" ]
    paths-ignore:
      - '**/*.png'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    env: 
      CI_COMMIT_MESSAGE: Update the automatically generated PNG
      CI_COMMIT_AUTHOR: Continuous Integration

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run main.py
      run: |
        python main.py
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        # Artifact name
        name: plot.png # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ./result.png
        # The desired behavior if no files are found using the provided path.
    # - name: GIT Commit & Push
    #   # Only run on main branch push (e.g. after pull request merge).
    #   if: github.event_name == 'push'
    #   run: |
    #     git config user.name 'github-actions[bot]'
    #     git config user.email 'github-actions[bot]@users.noreply.github.com'
    #     git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
    #     git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}
    #     git push
    - name: GitHub Commit & Push
      # You may pin to the exact commit or the version.
      # uses: actions-js/push@156f2b10c3aa000c44dbe75ea7018f32ae999772
      uses: actions-js/push@v1.4
      with:
        # Token for the repo. Can be passed in using $\{{ secrets.GITHUB_TOKEN }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # Commit message.
        message: "Update the automatically generated PNG"
        # Destination branch to push changes
        branch: test
